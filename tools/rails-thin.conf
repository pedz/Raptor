# Simplified Rails config set up
<Proxy balancer://raptor_cluster>
    BalancerMember http://127.0.0.1:5300
    BalancerMember http://127.0.0.1:5301
</Proxy>

<Proxy balancer://condor_cluster>
    BalancerMember http://127.0.0.1:5100
    BalancerMember http://127.0.0.1:5101
</Proxy>

<Proxy balancer://condor3_cluster>
    BalancerMember http://127.0.0.1:5200
    BalancerMember http://127.0.0.1:5201
</Proxy>

NameVirtualHost *:80

<VirtualHost *:80>
  ServerName localhost
  DocumentRoot /private/etc/apache2/other/rails_sites
  CustomLog /Users/pedzan/Source/Rails/raptor/log/access_log common

  ### RewriteLog "/Users/pedzan/Source/Rails/raptor/log/rewrite_log"
  ### RewriteLogLevel 5

  RewriteEngine On

  # Add in X-Forwarded-User as a substitute for REMOTE_USER
  RewriteCond %{LA-U:REMOTE_USER} (.+)
  RewriteRule .* - [E=RU:%1]
  RequestHeader add X-Forwarded-User %{RU}e

  <Location /raptor>
    Order allow,deny
    Allow from all

    AuthType Basic
    AuthName "Bluepages Authentication Apache"
    AuthBasicProvider file
    AuthUserFile /etc/apache2/passwd/passwords
    Require valid-user

    RewriteEngine On

    # Check for maintenance file and redirect all requests
    RewriteCond %{DOCUMENT_ROOT}/raptor/system/maintenance.html -f
    RewriteCond %{SCRIPT_FILENAME} !maintenance.html
    RewriteRule ^.*$ %{DOCUMENT_ROOT}/raptor/system/maintenance.html [L]
  
    # Rewrite index to check for static
    RewriteRule ^/$ /index.html [QSA]
  
    # Rewrite to check for Rails cached page
    RewriteRule ^([^.]+)$ $1.html [QSA]
  
    # Redirect all non-static requests to cluster
    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f
    RewriteRule ^(.*)$ balancer://raptor_cluster%{REQUEST_URI} [P,QSA,L]
  </Location>

  <Location /condor>
    Order allow,deny
    Allow from all

    AuthType Basic
    AuthName "Bluepages Authentication Apache"
    AuthBasicProvider file
    AuthUserFile /etc/apache2/passwd/passwords
    Require valid-user

    RewriteEngine On

    # Check for maintenance file and redirect all requests
    RewriteCond %{DOCUMENT_ROOT}/condor/system/maintenance.html -f
    RewriteCond %{SCRIPT_FILENAME} !maintenance.html
    RewriteRule ^.*$ %{DOCUMENT_ROOT}/condor/system/maintenance.html [L]
  
    # Rewrite index to check for static
    RewriteRule ^/$ /index.html [QSA]
  
    # Rewrite to check for Rails cached page
    RewriteRule ^([^.]+)$ $1.html [QSA]
  
    # Redirect all non-static requests to cluster
    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f
    RewriteRule ^(.*)$ balancer://condor_cluster%{REQUEST_URI} [P,QSA,L]
  </Location>

  <Location /condor3>
    Order allow,deny
    Allow from all

    AuthType Basic
    AuthName "Bluepages Authentication Apache"
    AuthBasicProvider file
    AuthUserFile /etc/apache2/passwd/passwords
    Require valid-user

    RewriteEngine On

    # Check for maintenance file and redirect all requests
    RewriteCond %{DOCUMENT_ROOT}/condor3/system/maintenance.html -f
    RewriteCond %{SCRIPT_FILENAME} !maintenance.html
    RewriteRule ^.*$ %{DOCUMENT_ROOT}/condor3/system/maintenance.html [L]
  
    # Rewrite index to check for static
    RewriteRule ^/$ /index.html [QSA]
  
    # Rewrite to check for Rails cached page
    RewriteRule ^([^.]+)$ $1.html [QSA]
  
    # Redirect all non-static requests to cluster
    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f
    RewriteRule ^(.*)$ balancer://condor3_cluster%{REQUEST_URI} [P,QSA,L]
  </Location>
</VirtualHost>
